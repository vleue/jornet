name: CI

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  rust-test:
    name: Server Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
      redis:
        image: redis:6
        ports:
          - 6379:6379
    env:
      SQLX_VERSION: 0.6.0
      SQLX_FEATURES: postgres
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache sqlx-cli
        uses: actions/cache@v4
        id: cache-sqlx
        with:
          path: |
            ~/.cargo/bin/sqlx
            ~/.cargo/bin/cargo-sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}-${{ env.SQLX_FEATURES }}

      - name: Install sqlx-cli 
        uses: actions-rs/cargo@v1
        if: steps.cache-sqlx.outputs.cache-hit == false
        with:
          command: install 
          args: >
            sqlx-cli
            --force
            --version=${{ env.SQLX_VERSION }}
            --features=${{ env.SQLX_FEATURES }}
            --locked

      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          cd jornet-server
          SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Run tests
        run: |
          cd jornet-server
          cargo test

  rust-fmt:
    name: Rust format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  rust-clippy:
    name: Clippy
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    env:
      SQLX_VERSION: 0.6.0
      SQLX_FEATURES: postgres
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true

      - name: Cache sqlx-cli
        uses: actions/cache@v4
        id: cache-sqlx
        with:
          path: |
            ~/.cargo/bin/sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}-${{ env.SQLX_FEATURES }}

      - name: Install sqlx-cli 
        uses: actions-rs/cargo@v1
        if: steps.cache-sqlx.outputs.cache-hit == false
        with:
          command: install 
          args: >
            sqlx-cli
            --force
            --version=${{ env.SQLX_VERSION }}
            --features=${{ env.SQLX_FEATURES }}
            --locked

      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          cd jornet-server
          SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Run clippy
        run: |
          cargo clippy -- -D warnings

  react-build:
    name: React Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: build
        run: |
          cd jornet-server-ui
          npm install
          npm run build
